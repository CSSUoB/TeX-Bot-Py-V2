import logging

from discord import ApplicationContext, Bot, ChannelType, Guild, Member, Role, TextChannel, utils
from discord.ext import commands

from utils import settings


class Write_Roles(commands.Cog):
    ROLES_MESSAGES: tuple[str, str, str, str] = (
        "\nReact to this message to get pronoun roles\nüá≠ - He/Him\nüá∏ - She/Her\nüáπ - They/Them",
        "_ _\nReact to this message to get year group roles\n0Ô∏è‚É£ - Foundation Year\n1Ô∏è‚É£ - First Year\n2Ô∏è‚É£ - Second Year\nüá´ - Final Year (incl. 3rd Year MSci/MEng)\nüáÆ - Year in Industry\nüá¶ - Year Abroad\nüáπ - Post-Graduate Taught (Masters/MSc) \nüá∑ - Post-Graduate Research (PhD) \nüÖ∞Ô∏è - Alumnus\nüá© - Postdoc",
        "_ _\nReact to this message to join the **opt in channels**\nüí¨ - Serious Talk\nüè° - Housing\nüéÆ - Gaming\nüì∫ - Anime\n‚öΩ - Sport\nüíº - Industry\n‚õèÔ∏è - Minecraft\nüåê - CSS Website\nüîñ - Archivist",
        "_ _\nReact to this message to opt in to News notifications\nüîà- Get notifications when we `@News`\nüîá- Don't get notifications when we `@News`\n_ _\n> We will still use `@everyone` messages if there is something urgent",
    )

    def __init__(self, bot: Bot):
        self.bot: Bot = bot

    # noinspection SpellCheckingInspection
    @commands.slash_command(
        name="writeroles",
        description="Populates #roles with the correct messages."
    )
    async def write_roles(self, ctx: ApplicationContext):
        guild: Guild | None = self.bot.get_guild(settings["DISCORD_GUILD_ID"])
        if guild is None:
            await ctx.respond(f"""‚ö†Ô∏èThere was an error when trying to send messages:‚ö†Ô∏èÔ∏è\n`Server with id \"{settings["DISCORD_GUILD_ID"]}\" does not exist.`""", ephemeral=True)
            return

        roles_channel: TextChannel | None = utils.get(guild.text_channels, name="roles")
        if roles_channel is None:
            await ctx.respond("‚ö†Ô∏èThere was an error when trying to send messages:‚ö†Ô∏èÔ∏è\n`Text channel with name \"roles\" does not exist.`", ephemeral=True)
            return

        guild_member: Member | None = await guild.fetch_member(ctx.user.id)
        if guild_member is None:
            await ctx.respond("‚ö†Ô∏èThere was an error when trying to send messages:‚ö†Ô∏èÔ∏è\n`You must be a member of the CSS Discord server to run this command.`", ephemeral=True)
            return

        committee_role: Role | None = utils.get(guild.roles, name="Committee")
        if committee_role is None:
            await ctx.respond("‚ö†Ô∏èThere was an error when trying to send messages:‚ö†Ô∏èÔ∏è\n`Role with name \"Committee\" does not exist.`", ephemeral=True)
            return

        if committee_role not in guild_member.roles:
            await ctx.respond("‚ö†Ô∏èThere was an error when trying to send messages:‚ö†Ô∏èÔ∏è\n`You must have the \"Committee\" role to run this command.`", ephemeral=True)
            return

        try:
            roles_message: str
            for roles_message in self.ROLES_MESSAGES:
                await roles_channel.send(roles_message)
        except Exception:
            await ctx.respond("‚ö†Ô∏èThere was an error when trying to send messages.‚ö†Ô∏è", ephemeral=True)
            raise
        else:
            await ctx.respond("All messages sent successfully.", ephemeral=True)

    @commands.slash_command(
        name="newping",
        description="test"
    )
    async def newping(self, ctx: ApplicationContext):
        await ctx.respond("a tessssst")


def setup(bot: Bot):
    bot.add_cog(Write_Roles(bot))
