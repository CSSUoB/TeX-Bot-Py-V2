[dependency-groups]
dev = [
    { include-group = "lint-format" },
    { include-group = "pre-commit" },
    { include-group = "test" },
    { include-group = "type-check" },
]
lint-format = ["ccft-pymarkdown>=2.0", "ruff>=0.9"]
main = [
    "asyncstdlib>=3.13",
    "beautifulsoup4>=4.12",
    "django>=5.1",
    "emoji>=2.14",
    "matplotlib>=3.10",
    "mplcyberpunk>=0.7",
    "parsedatetime>=2.6",
    "py-cord>=2.6,<2.6.1",                 # TODO: Remove version limit once #349 is resolved
    "python-dotenv>=1.0",
    "python-logging-discord-handler>=0.1",
    "typed_classproperties>=1.1.3",
    "validators>=0.34",
]
pre-commit = ["pre-commit>=4.0"]
test = ["pytest>=8.3"]
type-check = ["django-stubs[compatible-mypy]>=5.1", "mypy>=1.13", "types-beautifulsoup4>=4.12"]

[project] # TODO: Remove [project] table once https://github.com/astral-sh/uv/issues/8582 is completed
name = "TeX-Bot-Py-V2"
requires-python = ">=3.12,<3.13" # TODO: Allow Python 3.13 once py-cord makes a new release with support for it
version = "0.1.0"


[tool.pytest.ini_options]
filterwarnings = ["ignore:'audioop':DeprecationWarning"]


[tool.mypy]
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
enable_error_code = [
    "deprecated",
    "explicit-override",
    "ignore-without-code",
    "mutable-override",
    "narrowed-type-not-subtype",
    "possibly-undefined",
    "redundant-expr",
    "redundant-self",
    "truthy-bool",
    "truthy-iterable",
    "unused-awaitable",
]
extra_checks = true
no_implicit_reexport = true
plugins = ["mypy_django_plugin.main"]
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["discord_logging.handler", "mplcyberpunk", "parsedatetime", "validators"]

[[tool.mypy.overrides]]
ignore_errors = true
module = ["db.core.migrations.*"]


[tool.django-stubs]
django_settings_module = "db._settings"


[tool.ruff]
extend-exclude = ["db/**/migrations/"]
indent-width = 4
line-length = 95
output-format = "concise"

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint]
allowed-confusables = [
    "s",
    "x",
    "ǫ",
    "ɢ",
    "ɪ",
    "ɴ",
    "ʀ",
    "ʏ",
    "ʙ",
    "ʜ",
    "ʟ",
    "ғ",
    "ᴀ",
    "ᴄ",
    "ᴅ",
    "ᴇ",
    "ᴊ",
    "ᴋ",
    "ᴍ",
    "ᴏ",
    "ᴘ",
    "ᴛ",
    "ᴜ",
    "ᴠ",
    "ᴡ",
    "ᴢ",
]
ignore = [
    "C90",
    "COM812",
    "COM819",
    "CPY",
    "D206",
    "D212",
    "FA",
    "FAST",
    "INP001",
    "ISC001",
    "ISC002",
    "N806",
    "PD",
    "PIE808",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "S603",
    "SIM910",
    "TD002",
    "TD003",
    "W191",
]
select = ["ALL", "D204", "D213", "D401"]
task-tags = ["BUG", "DONE", "FIXME", "HACK", "IDEA", "ISSUE", "NOBUG", "NOTE", "REQ", "TODO"]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["abc", "re", "regex"]

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = ["S101"]

[tool.ruff.lint.flake8-self]
extend-ignore-names = ["_base_manager", "_default_manager", "_get_wrap_line_width", "_meta"]

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
strict = true

[tool.ruff.lint.isort]
known-first-party = ["cogs", "config", "db", "exceptions", "main", "tests", "utils"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["typed_classproperties.classproperty"]
extend-ignore-names = ["BROKEN_*_MESSAGE", "INVALID_*_MESSAGE", "NO_*_MESSAGE"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 95

[tool.ruff.lint.pydocstyle]
convention = "google"
property-decorators = ["typed_classproperties.classproperty"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["bytes", "int", "str"]
max-args = 8
max-branches = 19
max-returns = 10

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true
parametrize-values-type = "tuple"

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.pymarkdown]
extensions.front-matter.enabled = true
mode.strict-config = true
plugins.code-block-style.style = "fenced"
plugins.code-fence-style.style = "backtick"
plugins.heading-style.style = "atx"
plugins.hr-style.style = "---"
plugins.line-length.enabled = false
plugins.no-inline-html.allow_first_image_element = false
plugins.no-inline-html.allowed_elements = "!--,br"
plugins.no-trailing-spaces.strict = true
plugins.ol-prefix.style = "ordered"
plugins.ul-indent.indent = 4
plugins.ul-start-left.enabled = true
plugins.ul-style.style = "asterisk"


[tool.uv]
default-groups = ["dev", "main"]
no-binary-package = ["TeX-Bot-Py-V2"]
no-build = true
package = false
required-version = ">=0.5.8"
